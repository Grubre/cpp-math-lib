#pragma once
#include "common.hpp"

namespace cml {

template <arithmetic T>
constexpr T pi = static_cast<T>(
    3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679);

template <arithmetic T>
constexpr T e = static_cast<T>(
    2.7182818284590452353602874713526624977572470936999595749669676277240766303535475945713821785251664274);

template <arithmetic T>
constexpr T phi = static_cast<T>(
    1.6180339887498948482045868343656381177203091798057628621354486227052604628189024497072072041893911374);

template <arithmetic T>
constexpr T sqrt2 = static_cast<T>(
    1.414213562373095048801688724209698078569671875376948073176679737990732478462107038850387534327641573);

template <arithmetic T>
constexpr T sqrt3 = static_cast<T>(
    1.732050807568877293527446341505872366942805253810380628055806979451933016908800037081146186757248575);

} // namespace cml
